<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer on kenjisato.jp</title>
    <link>https://www.kenjisato.jp/tags/computer/index.xml</link>
    <description>Recent content in Computer on kenjisato.jp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="https://www.kenjisato.jp/tags/computer/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>[R] El Capital に xml2 パッケージのインストール</title>
      <link>https://www.kenjisato.jp/post/2017/04/r-el-capital-%E3%81%AB-xml2-%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.kenjisato.jp/post/2017/04/r-el-capital-%E3%81%AB-xml2-%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>&lt;p&gt;OSX El Capitan と XCode に問題があって， &lt;strong&gt;tidyverse&lt;/strong&gt; をインストールしようとすると &lt;strong&gt;xml2&lt;/strong&gt; パッケージをコンパイルできず止まってしまう。一向に解決されない，OS のアップグレードもしたくない。学習さえしないので同じ問題に遭遇した回数はや3回。ようやく記録を取ろうと思う。&lt;/p&gt;

&lt;p&gt;注意：Sierra にアップグレードできる人は，アップグレードした方がいいと思います。&lt;/p&gt;

&lt;p&gt;参考にしたのは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hadley/xml2/issues/127&#34;&gt;https://github.com/hadley/xml2/issues/127&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stat.ethz.ch/pipermail/r-sig-mac/2016-September/012046.html&#34;&gt;https://stat.ethz.ch/pipermail/r-sig-mac/2016-September/012046.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;要するに，こういうことだろう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cp /usr/bin/xml2-config ~/bin
$ nano ~/bin/xml2-config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3行目を書き換える&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#prefix=$(xcrun -show-sdk-path)/usr
prefix=/usr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一時的に PATH の優先順位を変えてやる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export PATH=~/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同じシェルのセッションから R を呼び出す。（RStudio などを使いたければから &lt;code&gt;open -a RStudio&lt;/code&gt; などとすればよいかもしれない）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ R
R version 3.4.0 (2017-04-21) -- &amp;quot;You Stupid Darkness&amp;quot;                                Copyright (C) 2017 The R Foundation for Statistical Computing
...

&amp;gt; install.packages(&amp;quot;xml2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CRAN ミラーを選ぶように促されるのでこだわりがなければ 0-Cloud を選ぶ。インストールがはじまる。上手くいったら &lt;code&gt;q()&lt;/code&gt; で終了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; q()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Keynote ファイルをエクスポートするスクリプト</title>
      <link>https://www.kenjisato.jp/post/2017/04/export-keynote/</link>
      <pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.kenjisato.jp/post/2017/04/export-keynote/</guid>
      <description>&lt;p&gt;データに基いて描く必要のない概念図などは Keynote で描いている。Rmarkdown や LaTeX などで読み込むには，JPEG や PDF にエクスポートして利用する。&lt;/p&gt;

&lt;p&gt;Rmarkdown で使う場合に利用する &lt;code&gt;knitr::include_graphics()&lt;/code&gt; は出力がHTMLのときはJPEG画像を読み込んで，LaTeXのときはPDFを使うということをやってくれる。便利だけど手間は2倍。手作業を減らしたいので下のようなスクリプトを書いた。AppleScript も Bashスクリプトも初心者だけど一応動いている動いている。&lt;/p&gt;

&lt;p&gt;使い方は Keynote ファイルを入れているフォルダを引数にしてBashスクリプトの方を実行する。例えば&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash keynote_export.sh folder -t pdf
bash keynote_export.sh folder -t jpeg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;などとする。&lt;/p&gt;

&lt;p&gt;ただし，本当に &lt;code&gt;knitr::include_graphics()&lt;/code&gt; に渡すための PDF を作るためにはできたPDFファイル &lt;code&gt;filename.pdf&lt;/code&gt; を &lt;code&gt;filename/filename.001.pdf&lt;/code&gt; のように分割する必要があるので，もう少し処理が必要。&lt;/p&gt;

&lt;p&gt;普通に LaTeX で &lt;code&gt;\includegraphics&lt;/code&gt; を使う場合は pgfpages を使えばよい。&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/kenjisato/de8435e64041d421605ea22af617038a.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>pythontex を lyx で使うときのメモ</title>
      <link>https://www.kenjisato.jp/post/2014/10/pythontex-on-lyx/</link>
      <pubDate>Wed, 01 Oct 2014 13:13:00 +0900</pubDate>
      
      <guid>https://www.kenjisato.jp/post/2014/10/pythontex-on-lyx/</guid>
      <description>&lt;p&gt;&lt;p&gt;PDFを作る話なのでPDFに書いた.  &lt;a href=&#34;https://dl.dropboxusercontent.com/u/1028642/files/pythontex.pdf&#34;&gt;pythontex.pdf&lt;/a&gt;&lt;/p&gt; &lt;p&gt;要点としては, &lt;/p&gt;&lt;ul&gt;&lt;li&gt;コンパイルに関して &lt;ul&gt;  &lt;li&gt;コンパイルはGUIに頼らず, lyx -&amp;gt; xelatex -&amp;gt; pythontex -&amp;gt; xelatex のコマンドを順に実行する&lt;/li&gt;  &lt;li&gt;1回目のxelatex コンパイルはエラーを無視する&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;画像挿入に関して &lt;ul&gt;  &lt;li&gt;フロート, キャプション, ラベルはGUIを使う&lt;/li&gt;  &lt;li&gt; 画像本体の挿入はTeXコマンド( \includegraphics{hoge.pdf} )を書く&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Instant Preview は「No math」にしておくとよい&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>